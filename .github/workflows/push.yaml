name: Push

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev", "main" ]
  workflow_dispatch:

jobs:
  debug:
    name: Build Debug
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is running on a ${{ runner.os }} server hosted by GitHub!"
      - uses: actions/checkout@v3
      - run: echo "The ${{ github.repository }} repository has been cloned."
      - run: echo "Setting up JDK"
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - run: java --version
      - run: env
      - run: echo "Ready to build."
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - run: echo "Building Debug APK."
      - name: Build with Gradle
        run: ./gradlew build
      - run: echo "Build status report=${{ job.status }}."
      - uses: actions/upload-artifact@v3
        with:
          name: PillApp-${{ github.run_number }}-${{ github.sha }}
          path: app/build/outputs/apk/debug/app-debug.apk
      - uses: actions/upload-artifact@v3
        with:
          name: PillApp-${{ github.run_number }}-${{ github.sha }}
          path: app/build/outputs/apk/release/app-release.apk


  build:
    name: Generate App Bundle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - run: chmod +x gradlew
      - name: Bundle 'release' with Gradle
        run: ./gradlew assembleRelease
      - name: Sign AAB
        id: sign_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
          alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.SIGNING_STORE_PASSWORD }}
          keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}
      - run: echo "Build status report=${{ job.status }}."
      - name: Upload App Bundle
        uses: actions/upload-artifact@v1
        with:
          name: aab
          path: ${{steps.sign_aab.outputs.signedReleaseFile}}

  release:
    name: Release App Bundle
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download AAB from build
        uses: actions/download-artifact@v1
        with:
          name: aab
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
        with:
          tag_name: Tag Name
          release_name: Release Name
      - name: Upload Release AAB
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: aab/app-release.aab
          asset_name: ${{ github.event.repository.name }}.aab
          asset_content_type: application/zip
      - run: echo "Upload returned with status=${{ job.status }}."